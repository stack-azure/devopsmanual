trigger: none
pr: none

variables:
  vmImageName: ubuntu-latest
  kvClientId: 'DevOps'
  kvClientSecret: 'DevOpsSecret'
  kvUrl: 'DevOpsUrl'
  keyVaultSecretName: 'SecretName'
  k8sFullNamespace: Dev
  devOpsEnvironment: tcm-k8s

jobs:

- job: Derive_Variable_Values
  steps:
    - script: |
        echo "This is job Foo."
        echo "##vso[task.setvariable variable=kubernetesServiceConnection;isOutput=true]tcm-k8s-tcm-k8s-dev-1590533416323"
      name: deriveVariableValues
- deployment: Deploy_Dev
  dependsOn: Derive_Variable_Values
  pool:
    vmImage: $(vmImageName)
  variables: 
    kubernetesServiceConnection: $[ dependencies.Derive_Variable_Values.outputs['deriveVariableValues.kubernetesServiceConnection'] ]
  environment: $(devOpsEnvironment)
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self 
          displayName: Checkout $(Build.Repository.Name)
        - task: Bash@3
          displayName: Echo kubernetesServiceConnection
          inputs:
            targetType: 'inline'
            script: |
              echo kubernetesServiceConnection is $(kubernetesServiceConnection)
        - template: create-secret.yaml
          parameters:
            kubernetesServiceConnection: $(kubernetesServiceConnection)
        - task: KubernetesManifest@0
          displayName: Create k8s secret with Key Vault values
          enabled: false
          inputs: 
            action: createSecret
            secretType: generic
            secretName: $(keyVaultSecretName)
            secretArguments: --from-literal=kvclientid=$(kvClientId) --from-literal=kvclientsecret=$(kvClientSecret) --from-literal=kvurl=$(kvUrl)
            kubernetesServiceConnection: tcm-k8s-tcm-k8s-dev-1590533416323
            namespace: $(k8sFullNamespace)    